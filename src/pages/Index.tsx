import { useState } from 'react';
import { useToast } from '@/hooks/use-toast';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Badge } from '@/components/ui/badge';
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';
import Icon from '@/components/ui/icon';
import { Avatar, AvatarFallback } from '@/components/ui/avatar';

const Index = () => {
  const { toast } = useToast();
  const [selectedAmount, setSelectedAmount] = useState<number>(500);
  const [customAmount, setCustomAmount] = useState<string>('');
  const [isProcessing, setIsProcessing] = useState(false);
  const [email, setEmail] = useState('');
  const [name, setName] = useState('');
  const [gameLogin, setGameLogin] = useState('');
  const [gameUserId, setGameUserId] = useState('');
  const [selectedGame, setSelectedGame] = useState('steam');

  const games = [
    { id: 'steam', name: 'Steam', icon: 'Gamepad2', loginLabel: '–õ–æ–≥–∏–Ω Steam', userIdLabel: null },
    { id: 'roblox', name: 'Roblox', icon: 'Boxes', loginLabel: 'Username Roblox', userIdLabel: 'User ID' },
    { id: 'pubg', name: 'PUBG Mobile', icon: 'Target', loginLabel: 'Player ID', userIdLabel: null },
    { id: 'mlbb', name: 'Mobile Legends', icon: 'Swords', loginLabel: 'User ID', userIdLabel: 'Zone ID' },
    { id: 'freefire', name: 'Free Fire', icon: 'Flame', loginLabel: 'Player ID', userIdLabel: null },
  ];

  const popularAmounts = [100, 300, 500, 1000, 2000, 5000];

  const tariffs = [
    { 
      id: 1, 
      name: '–ë–∞–∑–æ–≤—ã–π', 
      amount: 500, 
      bonus: 0, 
      icon: 'Rocket',
      popular: false 
    },
    { 
      id: 2, 
      name: '–ü–æ–ø—É–ª—è—Ä–Ω—ã–π', 
      amount: 1000, 
      bonus: 50, 
      icon: 'Zap',
      popular: true 
    },
    { 
      id: 3, 
      name: '–ü—Ä–µ–º–∏—É–º', 
      amount: 3000, 
      bonus: 200, 
      icon: 'Crown',
      popular: false 
    },
    { 
      id: 4, 
      name: '–ú–∞–∫—Å–∏–º—É–º', 
      amount: 5000, 
      bonus: 500, 
      icon: 'Trophy',
      popular: false 
    },
  ];

  const reviews = [
    {
      id: 1,
      name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ú.',
      avatar: 'AM',
      rating: 5,
      text: '–ü–æ–ø–æ–ª–Ω—è–ª —É–∂–µ 5 —Ä–∞–∑, –≤—Å—ë –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç. –û—Ç–ª–∏—á–Ω—ã–π —Å–µ—Ä–≤–∏—Å!',
      date: '2 –¥–Ω—è –Ω–∞–∑–∞–¥'
    },
    {
      id: 2,
      name: '–ú–∞—Ä–∏—è –ö.',
      avatar: '–ú–ö',
      rating: 5,
      text: '–ë—ã—Å—Ç—Ä–æ, —É–¥–æ–±–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ. –†–µ–∫–æ–º–µ–Ω–¥—É—é –≤—Å–µ–º!',
      date: '5 –¥–Ω–µ–π –Ω–∞–∑–∞–¥'
    },
    {
      id: 3,
      name: '–î–º–∏—Ç—Ä–∏–π –ü.',
      avatar: '–î–ü',
      rating: 4,
      text: '–•–æ—Ä–æ—à–∏–µ –±–æ–Ω—É—Å—ã –Ω–∞ –±–æ–ª—å—à–∏—Ö —Å—É–º–º–∞—Ö. –ë—É–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –µ—â—ë.',
      date: '–Ω–µ–¥–µ–ª—é –Ω–∞–∑–∞–¥'
    },
  ];

  const faqs = [
    {
      question: '–ö–∞–∫ –±—ã—Å—Ç—Ä–æ –ø–æ—Å—Ç—É–ø–∞—é—Ç —Å—Ä–µ–¥—Å—Ç–≤–∞?',
      answer: '–°—Ä–µ–¥—Å—Ç–≤–∞ –ø–æ—Å—Ç—É–ø–∞—é—Ç –Ω–∞ –∏–≥—Ä–æ–≤–æ–π –±–∞–ª–∞–Ω—Å –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã. –í —Å—Ä–µ–¥–Ω–µ–º —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –æ—Ç 30 —Å–µ–∫—É–Ω–¥ –¥–æ 5 –º–∏–Ω—É—Ç.'
    },
    {
      question: '–ö–∞–∫–∏–µ –∏–≥—Ä—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è?',
      answer: '–ú—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –≤ Steam, –ø–æ–∫—É–ø–∫—É Robux –≤ Roblox, UC –≤ PUBG Mobile, Diamond –≤ Mobile Legends Bang Bang –∏ Diamond –≤ Free Fire.'
    },
    {
      question: '–ö–∞–∫–∏–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã?',
      answer: '–ú—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∫–∞—Ä—Ç—ã Visa, Mastercard, –ú–ò–†, –∞ —Ç–∞–∫–∂–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏ –∏ –°–ë–ü.'
    },
    {
      question: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ –ª–∏ –ø–æ–ø–æ–ª–Ω—è—Ç—å –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ –≤–∞—à —Å–µ—Ä–≤–∏—Å?',
      answer: '–î–∞, –∞–±—Å–æ–ª—é—Ç–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ. –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞—â–∏—â–µ–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ SSL –∏ –Ω–µ —Ö—Ä–∞–Ω–∏–º –¥–∞–Ω–Ω—ã–µ –≤–∞—à–∏—Ö –∫–∞—Ä—Ç. –í—Å–µ –ø–ª–∞—Ç–µ–∂–∏ –ø—Ä–æ—Ö–æ–¥—è—Ç —á–µ—Ä–µ–∑ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã.'
    },
    {
      question: '–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–µ –ø—Ä–∏—à–ª–∏?',
      answer: '–ï—Å–ª–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –Ω–∞—à—É —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞ support@steamtopup.ru'
    },
    {
      question: '–ï—Å—Ç—å –ª–∏ –∫–æ–º–∏—Å—Å–∏—è –ø—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏?',
      answer: '–ù–µ—Ç, –º—ã –Ω–µ –≤–∑–∏–º–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–º–∏—Å—Å–∏–π. –í—ã –ø–ª–∞—Ç–∏—Ç–µ —Ä–æ–≤–Ω–æ —Ç—É —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∑–∞—á–∏—Å–ª–∏—Ç—å –Ω–∞ –±–∞–ª–∞–Ω—Å (–ø–ª—é—Å –±–æ–Ω—É—Å—ã –Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Ç–∞—Ä–∏—Ñ–∞—Ö).'
    },
  ];

  const handleTopUp = async () => {
    const amount = customAmount ? parseInt(customAmount) : selectedAmount;
    
    if (!email || !name || !gameLogin) {
      toast({
        title: '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è',
        description: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ email, –∏–º—è –∏ –∏–≥—Ä–æ–≤–æ–π –ª–æ–≥–∏–Ω',
        variant: 'destructive'
      });
      return;
    }
    
    const currentGame = games.find(g => g.id === selectedGame);
    if (currentGame?.userIdLabel && !gameUserId) {
      toast({
        title: '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è',
        description: `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ${currentGame.userIdLabel}`,
        variant: 'destructive'
      });
      return;
    }
    
    if (amount < 100) {
      toast({
        title: '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞',
        description: '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è - 100‚ÇΩ',
        variant: 'destructive'
      });
      return;
    }
    
    setIsProcessing(true);
    
    try {
      const response = await fetch('https://functions.poehali.dev/854d4aad-37fb-4211-97ee-94c6bc04c8f6', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          email,
          name,
          gameLogin,
          gameUserId,
          gameType: selectedGame,
          amount
        })
      });
      
      const data = await response.json();
      
      if (data.success) {
        toast({
          title: '‚úÖ –£—Å–ø–µ—à–Ω–æ!',
          description: data.message,
          duration: 5000
        });
        
        setEmail('');
        setName('');
        setGameLogin('');
        setGameUserId('');
        setCustomAmount('');
        setSelectedAmount(500);
      } else {
        toast({
          title: '–û—à–∏–±–∫–∞',
          description: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.',
          variant: 'destructive'
        });
      }
    } catch (error) {
      toast({
        title: '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏',
        description: '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É',
        variant: 'destructive'
      });
    } finally {
      setIsProcessing(false);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-[#171a21] via-[#1b2838] to-[#171a21]">
      <header className="border-b border-[#66c0f4]/20 bg-[#1b2838]/80 backdrop-blur-sm sticky top-0 z-50">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-3">
              <div className="w-10 h-10 bg-gradient-to-br from-[#66c0f4] to-[#8bc53f] rounded-lg flex items-center justify-center">
                <Icon name="Gamepad2" className="text-[#171a21]" size={24} />
              </div>
              <div>
                <h1 className="text-2xl font-bold text-white">BB.sell</h1>
                <p className="text-xs text-[#66c0f4]">–ë—ã—Å—Ç—Ä–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</p>
              </div>
            </div>
            <nav className="hidden md:flex gap-6">
              <a href="#topup" className="text-gray-300 hover:text-[#66c0f4] transition-colors">–ü–æ–ø–æ–ª–Ω–∏—Ç—å</a>
              <a href="#tariffs" className="text-gray-300 hover:text-[#66c0f4] transition-colors">–¢–∞—Ä–∏—Ñ—ã</a>
              <a href="#reviews" className="text-gray-300 hover:text-[#66c0f4] transition-colors">–û—Ç–∑—ã–≤—ã</a>
              <a href="#support" className="text-gray-300 hover:text-[#66c0f4] transition-colors">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</a>
            </nav>
          </div>
        </div>
      </header>

      <main className="container mx-auto px-4 py-12">
        <section id="topup" className="mb-20">
          <div className="text-center mb-12 animate-fade-in">
            <h2 className="text-5xl font-bold text-white mb-4">
              –ü–æ–ø–æ–ª–Ω–∏ –∏–≥—Ä–æ–≤–æ–π –±–∞–ª–∞–Ω—Å üéÆ
            </h2>
            <p className="text-xl text-gray-400">
              Steam ‚Ä¢ Roblox ‚Ä¢ PUBG Mobile ‚Ä¢ Mobile Legends ‚Ä¢ Free Fire
            </p>
            <p className="text-lg text-gray-500 mt-2">
              –ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ ‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ ‚Ä¢ –ë–æ–Ω—É—Å—ã –∫ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é
            </p>
          </div>

          <div className="grid lg:grid-cols-2 gap-8 max-w-6xl mx-auto">
            <Card className="bg-[#1b2838] border-[#66c0f4]/30 transition-transform duration-300 hover:scale-105">
              <CardHeader>
                <CardTitle className="text-white flex items-center gap-2">
                  <Icon name="Wallet" className="text-[#66c0f4]" />
                  –ë—ã—Å—Ç—Ä–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
                </CardTitle>
                <CardDescription className="text-gray-400">
                  –í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –∏ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-6">
                <div>
                  <Label className="text-white mb-3 block">–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É *</Label>
                  <div className="grid grid-cols-2 md:grid-cols-3 gap-2">
                    {games.map((game) => (
                      <Button
                        key={game.id}
                        variant={selectedGame === game.id ? 'default' : 'outline'}
                        className={`flex items-center gap-2 ${selectedGame === game.id
                            ? 'bg-gradient-to-r from-[#66c0f4] to-[#8bc53f] text-[#171a21] border-0'
                            : 'bg-[#2a475e] border-[#66c0f4]/30 text-white hover:bg-[#66c0f4]/20'
                        }`}
                        onClick={() => {
                          setSelectedGame(game.id);
                          setGameLogin('');
                          setGameUserId('');
                        }}
                      >
                        <Icon name={game.icon as any} size={16} />
                        {game.name}
                      </Button>
                    ))}
                  </div>
                </div>

                <div>
                  <Label htmlFor="email" className="text-white mb-2 block">Email *</Label>
                  <Input
                    id="email"
                    type="email"
                    placeholder="your@email.com"
                    value={email}
                    onChange={(e) => setEmail(e.target.value)}
                    className="bg-[#2a475e] border-[#66c0f4]/30 text-white placeholder:text-gray-500"
                    required
                  />
                </div>
                
                <div>
                  <Label htmlFor="name" className="text-white mb-2 block">–ò–º—è *</Label>
                  <Input
                    id="name"
                    placeholder="–í–∞—à–µ –∏–º—è"
                    value={name}
                    onChange={(e) => setName(e.target.value)}
                    className="bg-[#2a475e] border-[#66c0f4]/30 text-white placeholder:text-gray-500"
                    required
                  />
                </div>
                
                <div>
                  <Label htmlFor="gameLogin" className="text-white mb-2 block">
                    {games.find(g => g.id === selectedGame)?.loginLabel} *
                  </Label>
                  <Input
                    id="gameLogin"
                    placeholder={`–í–≤–µ–¥–∏—Ç–µ ${games.find(g => g.id === selectedGame)?.loginLabel}`}
                    value={gameLogin}
                    onChange={(e) => setGameLogin(e.target.value)}
                    className="bg-[#2a475e] border-[#66c0f4]/30 text-white placeholder:text-gray-500"
                    required
                  />
                </div>
                
                {games.find(g => g.id === selectedGame)?.userIdLabel && (
                  <div>
                    <Label htmlFor="gameUserId" className="text-white mb-2 block">
                      {games.find(g => g.id === selectedGame)?.userIdLabel} *
                    </Label>
                    <Input
                      id="gameUserId"
                      placeholder={`–í–≤–µ–¥–∏—Ç–µ ${games.find(g => g.id === selectedGame)?.userIdLabel}`}
                      value={gameUserId}
                      onChange={(e) => setGameUserId(e.target.value)}
                      className="bg-[#2a475e] border-[#66c0f4]/30 text-white placeholder:text-gray-500"
                      required
                    />
                  </div>
                )}
                
                <div>
                  <Label className="text-white mb-3 block">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—É–º–º—ã</Label>
                  <div className="grid grid-cols-3 gap-3">
                    {popularAmounts.map((amount) => (
                      <Button
                        key={amount}
                        variant={selectedAmount === amount ? 'default' : 'outline'}
                        className={`${
                          selectedAmount === amount
                            ? 'bg-gradient-to-r from-[#66c0f4] to-[#8bc53f] text-[#171a21] border-0'
                            : 'bg-[#2a475e] border-[#66c0f4]/30 text-white hover:bg-[#66c0f4]/20'
                        }`}
                        onClick={() => {
                          setSelectedAmount(amount);
                          setCustomAmount('');
                        }}
                      >
                        {amount}‚ÇΩ
                      </Button>
                    ))}
                  </div>
                </div>

                <div>
                  <Label htmlFor="custom-amount" className="text-white mb-2 block">
                    –ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é —Å—É–º–º—É
                  </Label>
                  <Input
                    id="custom-amount"
                    type="number"
                    placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É..."
                    value={customAmount}
                    onChange={(e) => {
                      setCustomAmount(e.target.value);
                      setSelectedAmount(0);
                    }}
                    className="bg-[#2a475e] border-[#66c0f4]/30 text-white placeholder:text-gray-500"
                  />
                </div>

                <div className="bg-[#2a475e] rounded-lg p-4">
                  <div className="flex justify-between items-center mb-2">
                    <span className="text-gray-400">–ö –æ–ø–ª–∞—Ç–µ:</span>
                    <span className="text-2xl font-bold text-[#8bc53f]">
                      {customAmount || selectedAmount}‚ÇΩ
                    </span>
                  </div>
                  <div className="flex items-center gap-2 text-sm text-gray-400">
                    <Icon name="Shield" size={16} className="text-[#8bc53f]" />
                    –ó–∞—â–∏—â–µ–Ω–Ω–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è
                  </div>
                </div>

                <Button
                  className="w-full bg-gradient-to-r from-[#66c0f4] to-[#8bc53f] text-[#171a21] font-bold text-lg py-6 hover:opacity-90 transition-opacity disabled:opacity-50"
                  onClick={handleTopUp}
                  disabled={isProcessing}
                >
                  <Icon name={isProcessing ? 'Loader2' : 'CreditCard'} className={`mr-2 ${isProcessing ? 'animate-spin' : ''}`} />
                  {isProcessing ? '–û–±—Ä–∞–±–æ—Ç–∫–∞...' : '–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å'}
                </Button>
              </CardContent>
            </Card>

            <div className="space-y-6">
              <Card className="bg-gradient-to-br from-[#66c0f4]/10 to-[#8bc53f]/10 border-[#66c0f4]/30">
                <CardHeader>
                  <CardTitle className="text-white flex items-center gap-2">
                    <Icon name="Sparkles" className="text-[#8bc53f]" />
                    –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Å–µ—Ä–≤–∏—Å–∞
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  {[
                    { icon: 'Zap', title: '–ú–≥–Ω–æ–≤–µ–Ω–Ω–æ', desc: '–°—Ä–µ–¥—Å—Ç–≤–∞ –∑–∞—á–∏—Å–ª—è—é—Ç—Å—è –∑–∞ 30 —Å–µ–∫—É–Ω–¥' },
                    { icon: 'Lock', title: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ', desc: 'SSL-—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –∏ –∑–∞—â–∏—Ç–∞ –¥–∞–Ω–Ω—ã—Ö' },
                    { icon: 'Gift', title: '–ë–æ–Ω—É—Å—ã', desc: '–î–æ 10% –∫ —Å—É–º–º–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è' },
                    { icon: 'Headphones', title: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7', desc: '–í—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å' },
                  ].map((feature, idx) => (
                    <div key={idx} className="flex items-start gap-3 animate-fade-in" style={{ animationDelay: `${idx * 0.1}s` }}>
                      <div className="w-10 h-10 rounded-lg bg-[#66c0f4]/20 flex items-center justify-center flex-shrink-0">
                        <Icon name={feature.icon as any} className="text-[#66c0f4]" size={20} />
                      </div>
                      <div>
                        <h4 className="text-white font-semibold">{feature.title}</h4>
                        <p className="text-gray-400 text-sm">{feature.desc}</p>
                      </div>
                    </div>
                  ))}
                </CardContent>
              </Card>

              <Card className="bg-[#1b2838] border-[#8bc53f]/30">
                <CardHeader>
                  <CardTitle className="text-white flex items-center gap-2">
                    <Icon name="TrendingUp" className="text-[#8bc53f]" />
                    –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="grid grid-cols-2 gap-4">
                    {[
                      { label: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', value: '50,000+' },
                      { label: '–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π', value: '200,000+' },
                      { label: '–°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥', value: '4.9/5' },
                      { label: '–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã', value: '3 –≥–æ–¥–∞' },
                    ].map((stat, idx) => (
                      <div key={idx} className="text-center p-3 bg-[#2a475e] rounded-lg">
                        <div className="text-2xl font-bold text-[#8bc53f]">{stat.value}</div>
                        <div className="text-sm text-gray-400">{stat.label}</div>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            </div>
          </div>
        </section>

        <section id="tariffs" className="mb-20">
          <div className="text-center mb-12">
            <h2 className="text-4xl font-bold text-white mb-4">–¢–∞—Ä–∏—Ñ—ã –∏ —Ü–µ–Ω—ã</h2>
            <p className="text-gray-400">–í—ã–≥–æ–¥–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å –±–æ–Ω—É—Å–∞–º–∏</p>
          </div>

          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6 max-w-6xl mx-auto">
            {tariffs.map((tariff, idx) => (
              <Card
                key={tariff.id}
                className={`relative transition-transform duration-300 hover:scale-105 ${
                  tariff.popular
                    ? 'bg-gradient-to-br from-[#66c0f4]/20 to-[#8bc53f]/20 border-[#8bc53f]'
                    : 'bg-[#1b2838] border-[#66c0f4]/30'
                }`}
                style={{ animationDelay: `${idx * 0.1}s` }}
              >
                {tariff.popular && (
                  <Badge className="absolute -top-3 left-1/2 -translate-x-1/2 bg-gradient-to-r from-[#66c0f4] to-[#8bc53f] text-[#171a21]">
                    –ü–æ–ø—É–ª—è—Ä–Ω—ã–π
                  </Badge>
                )}
                <CardHeader>
                  <div className="w-16 h-16 mx-auto mb-4 bg-gradient-to-br from-[#66c0f4] to-[#8bc53f] rounded-full flex items-center justify-center">
                    <Icon name={tariff.icon as any} className="text-[#171a21]" size={32} />
                  </div>
                  <CardTitle className="text-white text-center text-2xl">{tariff.name}</CardTitle>
                </CardHeader>
                <CardContent className="text-center space-y-4">
                  <div>
                    <div className="text-4xl font-bold text-[#66c0f4]">{tariff.amount}‚ÇΩ</div>
                    {tariff.bonus > 0 && (
                      <div className="text-[#8bc53f] font-semibold mt-2">
                        + {tariff.bonus}‚ÇΩ –±–æ–Ω—É—Å
                      </div>
                    )}
                  </div>
                  <Button
                    className={`w-full ${
                      tariff.popular
                        ? 'bg-gradient-to-r from-[#66c0f4] to-[#8bc53f] text-[#171a21]'
                        : 'bg-[#2a475e] text-white hover:bg-[#66c0f4]/20'
                    }`}
                    onClick={() => {
                      setSelectedAmount(tariff.amount);
                      setCustomAmount('');
                      window.scrollTo({ top: 0, behavior: 'smooth' });
                    }}
                  >
                    –í—ã–±—Ä–∞—Ç—å
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>
        </section>

        <section id="reviews" className="mb-20">
          <div className="text-center mb-12">
            <h2 className="text-4xl font-bold text-white mb-4">–û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤</h2>
            <p className="text-gray-400">–ß—Ç–æ –≥–æ–≤–æ—Ä—è—Ç –Ω–∞—à–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</p>
          </div>

          <div className="grid md:grid-cols-3 gap-6 max-w-6xl mx-auto">
            {reviews.map((review, idx) => (
              <Card
                key={review.id}
                className="bg-[#1b2838] border-[#66c0f4]/30 transition-transform duration-300 hover:scale-105 animate-fade-in"
                style={{ animationDelay: `${idx * 0.15}s` }}
              >
                <CardHeader>
                  <div className="flex items-center gap-3">
                    <Avatar>
                      <AvatarFallback className="bg-gradient-to-br from-[#66c0f4] to-[#8bc53f] text-[#171a21] font-bold">
                        {review.avatar}
                      </AvatarFallback>
                    </Avatar>
                    <div className="flex-1">
                      <CardTitle className="text-white text-base">{review.name}</CardTitle>
                      <div className="flex items-center gap-1 mt-1">
                        {Array.from({ length: review.rating }).map((_, i) => (
                          <Icon key={i} name="Star" className="text-[#8bc53f] fill-[#8bc53f]" size={14} />
                        ))}
                      </div>
                    </div>
                  </div>
                </CardHeader>
                <CardContent>
                  <p className="text-gray-300 mb-3">{review.text}</p>
                  <p className="text-sm text-gray-500">{review.date}</p>
                </CardContent>
              </Card>
            ))}
          </div>
        </section>

        <section id="support" className="mb-20">
          <div className="text-center mb-12">
            <h2 className="text-4xl font-bold text-white mb-4">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</h2>
            <p className="text-gray-400">–û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã</p>
          </div>

          <div className="max-w-3xl mx-auto">
            <Tabs defaultValue="faq" className="w-full">
              <TabsList className="grid w-full grid-cols-2 bg-[#1b2838] mb-8">
                <TabsTrigger value="faq" className="data-[state=active]:bg-gradient-to-r data-[state=active]:from-[#66c0f4] data-[state=active]:to-[#8bc53f] data-[state=active]:text-[#171a21]">
                  <Icon name="HelpCircle" className="mr-2" size={18} />
                  FAQ
                </TabsTrigger>
                <TabsTrigger value="contact" className="data-[state=active]:bg-gradient-to-r data-[state=active]:from-[#66c0f4] data-[state=active]:to-[#8bc53f] data-[state=active]:text-[#171a21]">
                  <Icon name="Mail" className="mr-2" size={18} />
                  –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
                </TabsTrigger>
              </TabsList>

              <TabsContent value="faq">
                <Card className="bg-[#1b2838] border-[#66c0f4]/30">
                  <CardContent className="pt-6">
                    <Accordion type="single" collapsible className="w-full">
                      {faqs.map((faq, idx) => (
                        <AccordionItem key={idx} value={`item-${idx}`} className="border-[#66c0f4]/20">
                          <AccordionTrigger className="text-white hover:text-[#66c0f4] text-left">
                            {faq.question}
                          </AccordionTrigger>
                          <AccordionContent className="text-gray-400">
                            {faq.answer}
                          </AccordionContent>
                        </AccordionItem>
                      ))}
                    </Accordion>
                  </CardContent>
                </Card>
              </TabsContent>

              <TabsContent value="contact">
                <Card className="bg-[#1b2838] border-[#66c0f4]/30">
                  <CardHeader>
                    <CardTitle className="text-white">–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º</CardTitle>
                    <CardDescription className="text-gray-400">
                      –ú—ã –æ—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤
                    </CardDescription>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div>
                      <Label htmlFor="name" className="text-white">–ò–º—è</Label>
                      <Input
                        id="name"
                        placeholder="–í–∞—à–µ –∏–º—è"
                        className="bg-[#2a475e] border-[#66c0f4]/30 text-white placeholder:text-gray-500 mt-2"
                      />
                    </div>
                    <div>
                      <Label htmlFor="email" className="text-white">Email</Label>
                      <Input
                        id="email"
                        type="email"
                        placeholder="your@email.com"
                        className="bg-[#2a475e] border-[#66c0f4]/30 text-white placeholder:text-gray-500 mt-2"
                      />
                    </div>
                    <div>
                      <Label htmlFor="message" className="text-white">–°–æ–æ–±—â–µ–Ω–∏–µ</Label>
                      <Input
                        id="message"
                        placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É..."
                        className="bg-[#2a475e] border-[#66c0f4]/30 text-white placeholder:text-gray-500 mt-2 min-h-[100px]"
                      />
                    </div>
                    <Button className="w-full bg-gradient-to-r from-[#66c0f4] to-[#8bc53f] text-[#171a21] font-bold hover:opacity-90">
                      <Icon name="Send" className="mr-2" />
                      –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
                    </Button>
                  </CardContent>
                </Card>
              </TabsContent>
            </Tabs>
          </div>
        </section>
      </main>

      <footer className="bg-[#1b2838] border-t border-[#66c0f4]/20 py-8">
        <div className="container mx-auto px-4">
          <div className="flex flex-col md:flex-row justify-between items-center gap-4">
            <div className="flex items-center gap-3">
              <div className="w-10 h-10 bg-gradient-to-br from-[#66c0f4] to-[#8bc53f] rounded-lg flex items-center justify-center">
                <Icon name="Gamepad2" className="text-[#171a21]" size={24} />
              </div>
              <div>
                <div className="text-white font-bold">BB.sell</div>
                <div className="text-sm text-gray-400">¬© 2024 –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã</div>
              </div>
            </div>
            <div className="flex gap-6 text-gray-400 text-sm">
              <a href="#" className="hover:text-[#66c0f4] transition-colors">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ</a>
              <a href="#" className="hover:text-[#66c0f4] transition-colors">–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Index;